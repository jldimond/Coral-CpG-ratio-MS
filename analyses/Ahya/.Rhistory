setwd("~/Documents/Projects/Coral-CpG-ratio-MS/analyses/Ahya")
#Read in CpG data with GOslim annotation and remove NA values
Ahya_cpg<-read.delim("Ahya_cpg_GOslim.tab", header=F)
Ahya_cpg2<-na.omit(Ahya_cpg)
#Testing mixture model with mixtools normalmixEM
library("mixtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("mixtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(Ahya_cpg2)
attach(Ahya_cpg2)
set.seed(100)
out<-normalmixEM(V2, arbvar = FALSE, epsilon = 1e-03)
plot(out)
data <- Ahya_cpg2$V2
mixmdl <- normalmixEM(data)
plot(mixmdl, which = 2)
lines(density(data), lty=2, lwd=2)
plot(mixmdl, which = 2)
lines(density(data), lty=2, lwd=2)
data <- subset(Ahya_cpg2$V2, V2 <= 2)
max(data)
mixmdl <- normalmixEM(data)
plot(mixmdl, which = 2)
min(data)
min(Ahya_cpg2$V2)
?mixtools
?normalmixEM
mixmdl <- normalmixEM(data, mu = 0.4, 0.7)
plot(mixmdl, which = 2)
lines(density(data), lty=2, lwd=2)
View(Ahya_cpg2)
?unique
?read.delim
Ahya_cpg<-read.delim("ID_CpG", header=F)
Ahya_cpg2<-na.omit(Ahya_cpg)
View(Ahya_cpg2)
View(Ahya_cpg2)
data <- subset(Ahya_cpg2$V2, V2 <= 2)
mixmdl <- normalmixEM(data, mu = 0.4, 0.7)
plot(mixmdl, which = 2)
max(data)
View(Ahya_cpg2)
View(Ahya_cpg2)
data <- subset(Ahya_cpg2$V2, V2 <= 2.0)
mixmdl <- normalmixEM(data, mu = 0.4, 0.7)
plot(mixmdl, which = 2)
lines(density(data), lty=2, lwd=2)
head(data)
min(data)
data <- subset(Ahya_cpg2$V2, V2 < 2.0)
max(data)
data <- subset(Ahya_cpg2$V2, V2 == 2.0)
data <- subset(Ahya_cpg2$V2, V2 == 1.0)
data
View(Ahya_cpg2)
View(Ahya_cpg2)
data <- subset(Ahya_cpg2$V2)
data <- Ahya_cpg2$V2
max(data)
data2 <- data[data <= 2]
max(data2)
mixmdl <- normalmixEM(data2, mu = 0.4, 0.7)
plot(mixmdl, which = 2)
min(data2)
min(Ahya_cpg$V2)
?normalmixEM
mixmdl <- normalmixEM(data2, mu = 0.4, 0.7)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.4, 0.8)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, arbmean = TRUE, arbavr = TRUE)
mixmdl <- normalmixEM(data2, arbmean = TRUE, arbvar = TRUE)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.5, 0.8, arbvar = TRUE)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.5, 0.8)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, lambda = 0.3, 0.7, sigma = 1.0, 1.0, mu = 0.5, 0.8)
mixmdl <- normalmixEM(data2, lambda = 0.3, 0.7, sigma = 1.0, 1.0, mu = 0.5, 0.8, arbmean = TRUE, arbvar = TRUE)
mixmdl <- normalmixEM(data2, lambda = 0.3, 0.7, mu = 0.5, 0.8)
mixmdl <- normalmixEM(data2,k=2,maxit=100,epsilon=0.01)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.5, 0.8, k=2,maxit=100,epsilon=0.01)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.4, 0.9, k=2,maxit=100,epsilon=0.01)
plot(mixmdl, which = 2)
mixmdl <- normalmixEM(data2, mu = 0.5, 0.8, k=2,maxit=100,epsilon=0.01)
plot(mixmdl, which = 2)
setwd("~/Documents/Projects/Coral-CpG-ratio-MS/analyses/Amil")
#Read in CpG data with GOslim annotation and remove NA values
Amil_cpg<-read.delim("ID_CpG", header=F)
Amil_cpg2<-na.omit(Amil_cpg)
#Testing mixture model with mixtools normalmixEM
library("mixtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
View(Amil_cpg2)
View(Amil_cpg2)
data <- Amil_cpg2$V2
data2 <- data[data <= 2]
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
data2 <- data[data <= 1.5]
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
setwd("~/Documents/Projects/Coral-CpG-ratio-MS/analyses/Ahya")
#Read in CpG data with GOslim annotation and remove NA values
Ahya_cpg<-read.delim("ID_CpG", header=F)
Ahya_cpg2<-na.omit(Ahya_cpg)
#Testing mixture model with mixtools normalmixEM
library("mixtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- Ahya_cpg2$V2
data2 <- data[data <= 1.5]
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, mu = 0.3, 0.8)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
set.seed(10)
> multmixmodel.sel(mixmdl, comps = 1:4, epsilon = 0.001)
multmixmodel.sel(mixmdl, comps = 1:4, epsilon = 0.001)
Waterdata
?makemultdata
mixmdl <- normalmixEM(data2, k = 2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, k =1)
?normalmixEM
mixmdl <- normalmixEM(data2, k =1, mu = 0.8)
mixmdl <- normalmixEM(data2, k =1, arbmean = FALSE)
?Waterdata
Waterdata
require Waterdata
require(Waterdata)
Waterdata
head(Waterdata)
mixmdl <- normalmixEM(data2, k =2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
mixmdl <- normalmixEM(data2, k =1)
Waterdata
mixmdl <- normalmixEM(data2, k =3)
plot(mixmdl, which = 2)
mixmdl <- normalmixEM(data2, k =1)
mixmdl <- normalmixEM(data2, mu = 0.79)
plot(mixmdl, which = 2)
mixmdl <- normalmixEM(data2, k= 1, mu = 0.79)
cutpts <- 0.1*(0:1.5)
datamult <- makemultdata(data2, cuts = cutpts)
set.seed(0.1)
multmixmodel.sel(datamult, comps = 1:4, epsilon = 0.001)
multmixmodel.sel(datamult, comps = 1:4)
?multimixmodel
?multimixmodel.sel
?multmixmodel.sel
set.seed(1)
multmixmodel.sel(datamult, comps = 1:4)
datamult(which = 1)
datamult
?makemultdata
lines(density(data2), lty=2, lwd=2)
cutpts <- c(0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4)
datamult <- makemultdata(data2, cuts = cutpts)
set.seed(1)
multmixmodel.sel(datamult, comps = 1:4)
traceback()
multmixmodel.sel(datamult, comps = 1:3)
multmixmodel.sel(datamult, comps = 1:2)
set.seed(100)
multmixmodel.sel(datamult, comps = 1:2)
set.seed(101)
mixmdl <- normalmixEM(data2, k= 1, mu = 0.79)
mixmdl <- normalmixEM(data2, k= 1, mu = 0.79, arbvar = TRUE)
mixmdl <- normalmixEM(data2, k= 1)
set.seed(104)
mixmdl <- normalmixEM(data2, k= 1)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
install.packages("mclust")
library("mclust", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2Mclust <- Mclust(data2)
summary(data2Mclust)
set.seed(101)
mixmdl <- normalmixEM(data2)
plot(mixmdl, which = 2)
lines(density(data2), lty=2, lwd=2)
?Mclust
data2Mclust <- Mclust(data2, G = 1:2)
summary(data2Mclust)
data2Mclust <- Mclust(data2, G = 1:3)
summary(data2Mclust)
data2Mclust <- Mclust(data2, G = 1:4)
summary(data2Mclust)
data2Mclust <- Mclust(data2, G = 1)
summary(data2Mclust)
library(mclust)
library(mixtools)
data2Mclust <- Mclust(data2, G = 1:2)
summary(data2Mclust)
